// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
// Try to derive URL from the Supabase project config as a fallback
// Vite supports importing text via ?raw
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
import projectTomlRaw from '../../../supabase/config.toml?raw';

function deriveUrlFromConfig(): string | undefined {
  try {
    const m = /project_id\s*=\s*"([a-z0-9]+)"/i.exec(String(projectTomlRaw));
    if (m && m[1]) {
      return `https://${m[1]}.supabase.co`;
    }
  } catch {
    // ignore
  }
  return undefined;
}

const SUPABASE_URL =
  (import.meta as any).env?.VITE_SUPABASE_URL ||
  (globalThis as any).__ENV?.VITE_SUPABASE_URL ||
  deriveUrlFromConfig();

const SUPABASE_PUBLISHABLE_KEY =
  (import.meta as any).env?.VITE_SUPABASE_PUBLISHABLE_KEY ||
  (globalThis as any).__ENV?.VITE_SUPABASE_PUBLISHABLE_KEY;

if (!SUPABASE_URL) {
  // Provide a clearer error in the console to aid setup
  // This will still fail at createClient, but with more context
  console.error('[Supabase] Missing URL. Set VITE_SUPABASE_URL in build env or ensure supabase/config.toml has project_id.');
}
if (!SUPABASE_PUBLISHABLE_KEY) {
  console.error('[Supabase] Missing anon key. Set VITE_SUPABASE_PUBLISHABLE_KEY in build env or expose via window.__ENV.');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});
